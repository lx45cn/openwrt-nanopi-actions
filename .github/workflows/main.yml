# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
name: Build neo2

on: 

  repository_dispatch:

  workflow_dispatch:

#  schedule:

#    - cron: 0 8 * * 5

env:

  DEVICENAME: NEO2

  REPO_URL: https://github.com/project-openwrt/openwrt

  REPO_BRANCH: master

  FEEDS_CONF: feeds.conf.default

  CONFIG_FILE: ./Device/neo2/.config

  DIY_P1_SH: ./Device/neo2/diy-part1.sh

  DIY_P2_SH: ./Device/neo2/diy-part2.sh

  UPLOAD_BIN_DIR: false

  UPLOAD_FIRMWARE: true

  UPLOAD_COWTRANSFER: true

  UPLOAD_WETRANSFER: false

  UPLOAD_RELEASE: false

  TZ: Asia/Shanghai

jobs:

  Build:

    runs-on: ubuntu-18.04

    steps:

    - name: Checkout Repository 测试

      uses: actions/checkout@v2

    - name: MachineType 编译机器类型

      run: |

        cat /proc/cpuinfo

        cat /proc/meminfo

        cat /etc/issue

        cat /proc/version

    - name: CustomFileAvaliableTest 测试配置文件是否存在

      run: |

        echo "Test"

        echo "FEEDS_CONF"

        [ -e $FEEDS_CONF ] &&cat $FEEDS_CONF

        echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"

        
